generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// === EDR generator ====

generator erd {
  provider = "prisma-erd-generator"
  output   = "./ERD.png"
  puppeteerConfig = "./puppeteer-config.json"
}

// === Markdown Documentation generator ===
generator markdown {
  provider = "prisma-markdown"
  output   = "./DOCUMENTATION.md"
}

// === DATA MODELS ====

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String

  roleId    Int
  role      Role     @relation(fields: [roleId], references: [id])

  administeredCondominium Condominium? @relation("administeredCondominium")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  users User[]
}

model Condominium {
  id                  Int     @id @default(autoincrement())

  // === General Information ===
  name                String
  logoUrl             String?
  phone               String?

  // === Contact Information and Location ===
  country             String  @default("MX") 
  state               String  
  municipality        String  
  neighborhood        String  
  street              String  
  exteriorNumber      String  
  interiorNumber      String? 
  postalCode          String  

  // === Regional Configuration ===
  timezone            String  @default("America/Mexico_City")
  language            String  @default("es-MX")
  currency            String  @default("MXN")

  // === Tax Information ===
  taxId               String  @unique 
  fiscalRegimeCode    String  
  
  // === Informaci√≥n Bancaria (Opcional) ===
  bankName            String?
  bankAccountNumber   String?
  bankClabe           String? @unique

  // === Relations ===
  // Condominium managed by One Administrator
  administratorId     Int     @unique
  administrator       User    @relation(name: "administeredCondominium", fields: [administratorId], references: [id])

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}
